{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObj","post","update","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","changedNote","updatedNote","catch","error","setTimeout","n","onSubmit","e","preventDefault","noteObj","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,qBAAIC,UAAU,OAAd,UACE,+BAAOJ,EAAKK,UACZ,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCLpCK,EAAU,aAmBDC,EAFK,CAAEC,OAfP,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAafC,OAVf,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQPI,OALvB,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCF9BO,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAe,OAAZA,EACQ,KAIP,qBAAKlB,UAAU,QAAf,SACKkB,KCuFEC,EA3FH,WAAO,IAAD,EAEYC,mBAAS,IAFrB,mBAERC,EAFQ,KAEDC,EAFC,OAGgBF,mBAAS,IAHzB,mBAGRG,EAHQ,KAGCC,EAHD,OAIgBJ,oBAAS,GAJzB,mBAIRK,EAJQ,KAICC,EAJD,OAK0BN,mBAAS,MALnC,mBAKRO,EALQ,KAKMC,EALN,KAOhBC,qBAAU,WACRzB,EACGC,SACAG,MAAK,SAAAsB,GACJR,EAASQ,QAEZ,IAEH,IAAMC,EACAN,EAAUJ,EAAQA,EAAMW,QAAO,SAAApC,GAAI,OAAuB,IAAnBA,EAAKG,aAgDlD,OACE,gCACE,uCACA,cAAC,EAAD,CAAcmB,QAASS,IACvB,yBAAQzB,QA5BU,WACpBwB,GAAYD,IA2BV,kBACQA,EAAU,YAAc,SAEhC,6BACGM,EAAYE,KAAI,SAAArC,GAAI,OACjB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAhCL,SAACkB,GACxB,IAAMnB,EAAOyB,EAAMa,MAAK,SAAAtC,GAAI,OAAIA,EAAKmB,KAAOA,KACtCoB,EAAW,2BAAOvC,GAAP,IAAa,WAAcA,EAAKG,YAEjDK,EACGU,OAAOC,EAAIoB,GACX3B,MAAK,SAAA4B,GACJd,EAASD,EAAMY,KAAI,SAAArC,GAAI,OAAIA,EAAKmB,KAAOA,EAAKnB,EAAOwC,SAEpDC,OAAM,SAAAC,GACLV,EAAgB,SAAD,OACJhC,EAAKK,QADD,sCAGfsC,YAAW,WACTX,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAAAQ,GAAC,OAAIA,EAAEzB,KAAOA,SAgBNlB,CAAiBD,EAAKmB,MAFzCnB,EAAKmB,SAMlB,uBAAM0B,SA9DM,SAACC,GACfA,EAAEC,iBAEF,IAAMC,EAAU,CACd3C,QAASsB,EACTsB,MAAM,IAAIC,MAAOC,cACjBhD,UAAWiD,KAAKC,SAAW,GAC3BlC,GAAIM,EAAM6B,OAAS,GAGrB9C,EACGO,OAAOiC,GACPpC,MAAK,SAAAe,GACJD,EAASD,EAAM8B,OAAO5B,IACtBC,EAAW,QAgDb,UACE,uBACE4B,MAAO7B,EACP8B,SA/CiB,SAACX,GACxBlB,EAAWkB,EAAEY,OAAOF,UAgDhB,wBAAQG,KAAK,SAAb,yB,MCrFRC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d663ef50.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'Make not important' : 'Make important';\r\n  return (\r\n    <li className='note'>\r\n      <span>{note.content}</span>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObj => {\r\n    const request = axios.post(baseUrl, newObj);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObj);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst noteService = { getAll, create, update };\r\n\r\nexport default noteService","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\r\n  const [ notes, setNotes ] = useState([]);\r\n  const [ newNote, setNewNote ] = useState('');\r\n  const [ showAll, setShowAll ] = useState(true);\r\n  const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes  => {     \r\n        setNotes(initialNotes )\r\n      })\r\n  }, [])\r\n\r\n  const notesToShow = \r\n        showAll ? notes : notes.filter(note => note.important === true)\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault();\r\n    \r\n    const noteObj = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObj)\r\n      .then(newNote => {\r\n        setNotes(notes.concat(newNote));\r\n        setNewNote('');\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (e) => {\r\n    setNewNote(e.target.value);\r\n  }\r\n\r\n  const toggleShowAll = () => {\r\n    setShowAll(!showAll);\r\n  }\r\n\r\n  const toggleImportance = (id) => {\r\n    const note = notes.find(note => note.id === id);\r\n    const changedNote = {...note, 'important': !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(updatedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : updatedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage}/>\r\n      <button onClick={toggleShowAll}>\r\n        show {showAll ? 'important' : 'all'}\r\n      </button>\r\n      <ul>\r\n        {notesToShow.map(note => \r\n            <Note \r\n              key={note.id} \r\n              note={note} \r\n              toggleImportance={() => toggleImportance(note.id)}\r\n            />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote} \r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}